#Helm Rancher

helm repo add rancher-stable https://releases.rancher.com/server-charts/stable

# V2.5.10

helm upgrade --install rancher rancher-stable/rancher  --namespace cattle-system --set hostname=console.kubepriority.com --set rancherImageTag=v2.5.10

#Lets
helm install --name rancher rancher-stable/rancher  --namespace cattle-system --set hostname=console.kubepriority.com --set ingress.tls.source=letsEncrypt --set letsEncrypt.email=kariston.sugimoto@centralit.com.br

#TLS Files

kubectl -n cattle-system create secret tls tls-rancher-ingress --cert=tls.crt --key=tls.key
kubectl -n cattle-system create secret generic tls-ca --from-file=cacerts.pem=cacerts.pem

helm install --namespace cattle-system --name rancher rancher-stable/rancher --set hostname=console.kubepriority.com --set ingress.tls.source=secret --set privateCA=true --set rancherImageTag=v2.5.10


#Custom

kubectl -n cattle-system create secret tls cattle-keys-ingress --cert=tls.crt --key=tls.key
kubectl -n cattle-system create secret generic tls-ca --from-file=cacerts.pem=cacerts.pem


helm install --name rancher rancher-stable/rancher  --namespace cattle-system --set hostname=console.kubepriority.com --set ingress.tls.source=letsEncrypt --set letsEncrypt.email=erik.marques@4kube.com --set privateCA=true --set rancherImageTag=v2.5-head


# Rancher Docker

docker run -d  --name rancher --restart=unless-stopped   -p 80:80 -p 443:443 -p 10254:10254  -v /opt/cert/tls.pem:/etc/rancher/ssl/cert.pem   -v /opt/cert/key.pem:/etc/rancher/ssl/key.pem   -v /opt/cert/cacert.pem:/etc/rancher/ssl/cacerts.pem   -v /opt/rancher:/var/lib/rancher --privileged   rancher/rancher:v2.5.7


## Rancher 2.6

# Rancher 2.6 - utilizando AWS Load Balancer - https://docs.ranchermanager.rancher.io/v2.5/reference-guides/installation-references/helm-chart-options

# Prerequeriments

# Cert Manager
kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.10.0/cert-manager.yaml

# Criação do ca internam para geração de kubeconfig (certificate-authority)

kubectl create ns cattle-system
kubectl -n cattle-system create secret generic tls-ca --from-file=cacerts.pem=cacerts.pem

# Repo Helm

helm repo add rancher-latest  https://releases.rancher.com/server-charts/latest
helm repo update

# Install Rancher - AWS Load Balancer Controller

helm upgrade --install rancher rancher-latest/rancher --namespace cattle-system --set hostname=console.edsmulticloudtreinamento.com \
--set 'ingress.extraAnnotations.alb\.ingress\.kubernetes\.io/scheme=internet-facing' \
--set 'ingress.extraAnnotations.alb\.ingress\.kubernetes\.io/success-codes=200\,404\,301\,302' \
--set 'ingress.extraAnnotations.alb\.ingress\.kubernetes\.io/subnets=subnet-021058a96188b05c7\,subnet-01e19fdee53dd540f\,subnet-059f0f3e6dd38a2aa' \
--set 'ingress.extraAnnotations.alb\.ingress\.kubernetes\.io/listen-ports=[{\"HTTP\": 80}\, {\"HTTPS\": 443}]' \
--set 'ingress.extraAnnotations.alb\.ingress\.kubernetes\.io/certificate-arn=arn:aws:acm:us-east-1:373548616758:certificate/f608dd76-fdaf-4c67-a11d-bfaf6aff7e5f' \
--set 'ingress.extraAnnotations.kubernetes\.io/ingress\.class=alb'  --set replicas=1 --set tls=external --set bootstrapPassword=Changeme123! \
--set privateCA=true

kubectl -n cattle-system patch svc rancher -p '{"spec": {"type": "NodePort"}}'

# Force reset password

kubectl -n cattle-system exec $(kubectl -n cattle-system get pods -l app=rancher | grep ‘1/1’ | head -1 | awk ‘{ print $1 }’) --reset-password