# An advanced example of ClusterConfig object with customised nodegroups:
---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: ex-eks-v1-23
  region: us-east-1

vpc:
  id: "vpc-0869fc3747b426c9e"  # (optional, must match VPC ID used for each subnet below)
  cidr: "10.217.0.0/18"       # (optional, must match CIDR used by the given VPC)
  securityGroup: "sg-010bd3f678986a9df"
  subnets:
    private:
      us-east-1a:
        id: "subnet-089ec45c73d827322"
        #cidr: "10.221.0.0/24" # (optional, must match CIDR used by the given subnet)

      us-east-1b:
        id: "subnet-06581fd75a34ec57c"
        #cidr: "10.221.1.0/24"  # (optional, must match CIDR used by the given subnet)

      us-east-1c:
        id: "subnet-0abc396d51d0eba61"
        #cidr: "10.221.2.0/24"   # (optional, must match CIDR used by the given subnet)

managedNodeGroups:
  - name: node02-group-t3
    instanceType: t3.large
    volumeSize: 20
    volumeType: gp3
    desiredCapacity: 1
    labels:
      nodegroup-type: t3-large
    iam:
      withAddonPolicies:
        autoScaler: true
    privateNetworking: true
    preBootstrapCommands:
      # allow docker registries to be deployed as cluster service
      - "sed '2i \"insecure-registries\": [\"172.20.0.0/16\",\"10.100.0.0/16\"],'  /etc/docker/daemon.json"
      - "systemctl restart docker"

    # cluster AZs must be set explicitly for single AZ nodegroup example to work
    availabilityZones: ["us-east-1a", "us-east-1b", "us-east-1c"]